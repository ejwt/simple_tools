功能：分割二进制文件。有两种工作模式：

模式0――等分分割模式
对于不超过2GiB的文件，按照“被分割的文件的大小”和“分割后每一个文件块的大小”，自动计算分割块数，最多可以将文件分割为8192块；并生成用于合并分割后的文件块的批处理文件join.bat。若原文件名为filename1，则分割后的文件块名为filename2Nfilename3，N＝0000～8191，filename2、filename3可以在程序运行的时候指定。限制分割后的文件块数，是为了防止误操作，产生大量小文件，给删除文件带来麻烦（太慢）。
对于超过2GiB的文件，分割后每个文件块的大小、文件块的个数都要手工输入，而且每个文件块的大小是以MiB（1048576字节）为单位的。最后一个小文件块（可能有，也可能没有，取决于文件大小能不能被文件块大小整除）的大小不必输入，而是一直复制到来源文件的末尾。正因为文件块的个数是手工输入的，所以，选取大于2GiB的处理模式，也可以实现只保留一部分文件块的应用要求（来源文件不一定的确大于2GiB，程序对此不做检查――但如果文件大于等于2GiB，则强制为“大文件模式”；如果文件小于2GiB，选取“大文件模式”也可，但切割精度只能到MiB）。例如，将一个100MiB的文件切开，只选取前面的3块，每块10MiB。

当然上述限制也可以通过修改源代码，重新编译而取消
#define MAX_NUM_DST_BLOCK    8192

模式1――指定起始地址、结束地址分割模式，输入十进制的起始地址startAddress、结束地址endAddress，两个地址（相对于文件首偏移量）之间的数据被保存到一个新文件中。注意：“startAddress=0”表示文件首，所以切割下来的文件的大小等于(endAddress-startAddress+1)字节。
同样的，对于超过2GiB的文件，地址也是以MiB（1048576字节）为单位的。而且为了编程方便起见，不输入结束地址，而是输入截取的长度。

该程序的局限：由于DOS命令行字符个数的限制，当文件个数太多或文件名太长时，join.bat无效。这时可用copy /B *.extention_name joined_filename之类的命令连接所有文件，由于分割出来的文件块名很有规律，这样合并文件，在Windows 2000的DOS虚拟机下是可以的（操作系统自动按照文件名排列文件），与源文件完全相同。在Windows XP 32-bit专业版上也是可以的。

算法说明：如何产生分割后的文件块名？原来想用字符数组，但试了一下，发现因为有变动的部分（编号），而且文件块的名字也不定，不易实现。就采用如下方法：先将文件块名产生出来，存放在一个临时的文本文件dst_block_name.tmp中，在写各个文件块时，若需要文件名，就从dst_block_name.tmp中读取。程序运行结束前自动删除这个临时文件。
――――――――――――――――――――――――――――――――――――――――
v3.0对v2.1的改动：
增加对大于等于2GiB的文件的处理。对于大于等于2GiB的文件，切割精度是MiB；对于小于2GiB的文件，切割精度是字节。
最多可以将文件分割为8192块。
――――――――――――――――――――――――――――――――――――――――
v2.1对v2的改动：
生成的文件名中，数字前不加下划线。
――――――――――――――――――――――――――――――――――――――――
v2对v1的改动：
解决程序异常退出时的“非法操作”bug。
自动删除临时文件dst_block_name.tmp。
v1版本的程序，生成的join.bat文件多了两个不必要的字符（加号和一个backspace），现在去掉之。
